name: Build

on:
  push:
    branches:
      - master
    paths-ignore:
      - 'README.md'
      - 'LICENSE'
      - '.gitignore'
      - 'docker-compose.yml'
      - 'config.sample.yml'
      - '.vscode'

env:
  GO_VERSION: 1.24.1

jobs:
  vet:
    name: "go vet"
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Run go vet
        run: go vet github.com/wavy-cat/petpet-go/cmd/app

  test:
    name: "go test"
    runs-on: ubuntu-24.04-arm
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Run go test
        run: go test ./...

  build-docker:
    name: "Build and Push Docker Image"
    runs-on: ubuntu-24.04-arm
    needs: [ vet, test ]
    permissions:
      packages: write
      contents: read

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GHCR
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker image
        id: push
        uses: docker/build-push-action@v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64,linux/arm
          file: ./Dockerfile
          push: true
          tags: ghcr.io/wavy-cat/petpet-go:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
  
  build-exe:
    name: "Compile the binaries"
    runs-on: ubuntu-24.04-arm
    needs: [ vet, test ]
    strategy:
      matrix:
        os: [linux, windows, darwin]
        arch: ['386', amd64, arm, arm64]
    steps:
      - name: Checkout repository
        if: matrix.os != 'darwin' || (matrix.arch != '386' && matrix.arch != 'arm')
        uses: actions/checkout@v4
      
      - name: Set up Go
        if: matrix.os != 'darwin' || (matrix.arch != '386' && matrix.arch != 'arm')
        uses: actions/setup-go@v5
        with:
          go-version: ${{ env.GO_VERSION }}
      
      - name: Build
        if: matrix.os != 'darwin' || (matrix.arch != '386' && matrix.arch != 'arm')
        env:
          GOOS: ${{ matrix.os }}
          GOARCH: ${{ matrix.arch }}
          CGO_ENABLED: 0
        run: |
          output_name="bin/petpet-$GOOS-$GOARCH"
          if [ "$GOOS" = "windows" ]; then
            output_name="$output_name.exe"
          fi
          go build -v -trimpath -ldflags="-s -w" -o "$output_name" github.com/wavy-cat/petpet-go/cmd/app
        
      - name: Upload artifacts
        if: matrix.os != 'darwin' || (matrix.arch != '386' && matrix.arch != 'arm')
        uses: actions/upload-artifact@v4
        with:
          name: binary-${{ matrix.os }}-${{ matrix.arch }}
          path: bin/
